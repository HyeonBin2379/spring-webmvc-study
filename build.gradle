plugins {
    id 'java'
    id 'war'
}

group 'com.ssg'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    // 스프링 프로젝트의 필수 라이브러리
    compileOnly('javax.servlet:javax.servlet-api:4.0.1')
    implementation 'org.springframework:spring-core:5.3.27'
    implementation 'org.springframework:spring-context:5.3.27'
    implementation 'org.springframework:spring-webmvc:5.3.27'
    implementation 'org.springframework:spring-test:5.3.27'

    // MySQL DB 드라이버
    implementation 'mysql:mysql-connector-java:8.0.22'
    // DB 커넥션풀 라이브러리
    implementation 'com.zaxxer:HikariCP:5.0.1'

    // lombok 라이브러리 -> getter, setter 편리하게 사용
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    // log4j2 라이브러리 추가: 로그 레벨별 시스템 로그 관리
    implementation 'org.apache.logging.log4j:log4j-api:2.22.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.22.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.22.1'
    implementation 'jstl:jstl:1.2'

    // model 계층 객체 변환용 mapper 추가
    implementation 'org.modelmapper:modelmapper:3.0.0'

    // 테스트를 수행할 때 필요한 기능을 제공하는 라이브러리
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}